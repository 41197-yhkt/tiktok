// Code generated by Kitex v0.4.4. DO NOT EDIT.

package compositeservice

import (
	"context"
	composite "github.com/41197-yhkt/tiktok-composite/kitex_gen/composite"
	client "github.com/cloudwego/kitex/client"
	callopt "github.com/cloudwego/kitex/client/callopt"
)

// Client is designed to provide IDL-compatible methods with call-option parameter for kitex framework.
type Client interface {
	BasicFavoriteActionMethod(ctx context.Context, req *composite.BasicFavoriteActionRequest, callOptions ...callopt.Option) (r *composite.BasicFavoriteActionResponse, err error)
	BasicFavoriteListMethod(ctx context.Context, req *composite.BasicFavoriteListRequest, callOptions ...callopt.Option) (r *composite.BasicFavoriteListResponse, err error)
	BasicFeedMethod(ctx context.Context, req *composite.BasicFeedRequest, callOptions ...callopt.Option) (r *composite.BasicFeedResponse, err error)
	BasicCommentActionMethod(ctx context.Context, req *composite.BasicCommentActionRequest, callOptions ...callopt.Option) (r *composite.BasicCommentActionResponse, err error)
	BasicCommentListMethod(ctx context.Context, req *composite.BasicCommentListRequest, callOptions ...callopt.Option) (r *composite.BasicCommentListResponse, err error)
}

// NewClient creates a client for the service defined in IDL.
func NewClient(destService string, opts ...client.Option) (Client, error) {
	var options []client.Option
	options = append(options, client.WithDestService(destService))

	options = append(options, opts...)

	kc, err := client.NewClient(serviceInfo(), options...)
	if err != nil {
		return nil, err
	}
	return &kCompositeServiceClient{
		kClient: newServiceClient(kc),
	}, nil
}

// MustNewClient creates a client for the service defined in IDL. It panics if any error occurs.
func MustNewClient(destService string, opts ...client.Option) Client {
	kc, err := NewClient(destService, opts...)
	if err != nil {
		panic(err)
	}
	return kc
}

type kCompositeServiceClient struct {
	*kClient
}

func (p *kCompositeServiceClient) BasicFavoriteActionMethod(ctx context.Context, req *composite.BasicFavoriteActionRequest, callOptions ...callopt.Option) (r *composite.BasicFavoriteActionResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BasicFavoriteActionMethod(ctx, req)
}

func (p *kCompositeServiceClient) BasicFavoriteListMethod(ctx context.Context, req *composite.BasicFavoriteListRequest, callOptions ...callopt.Option) (r *composite.BasicFavoriteListResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BasicFavoriteListMethod(ctx, req)
}

func (p *kCompositeServiceClient) BasicFeedMethod(ctx context.Context, req *composite.BasicFeedRequest, callOptions ...callopt.Option) (r *composite.BasicFeedResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BasicFeedMethod(ctx, req)
}

func (p *kCompositeServiceClient) BasicCommentActionMethod(ctx context.Context, req *composite.BasicCommentActionRequest, callOptions ...callopt.Option) (r *composite.BasicCommentActionResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BasicCommentActionMethod(ctx, req)
}

func (p *kCompositeServiceClient) BasicCommentListMethod(ctx context.Context, req *composite.BasicCommentListRequest, callOptions ...callopt.Option) (r *composite.BasicCommentListResponse, err error) {
	ctx = client.NewCtxWithCallOptions(ctx, callOptions)
	return p.kClient.BasicCommentListMethod(ctx, req)
}
